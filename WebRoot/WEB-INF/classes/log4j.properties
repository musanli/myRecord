#根节点
#OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 ALL 或者您定义的级别。Log4j 建议只使用四个级别，优 先级从高到低分别是 ERROR 、 WARN 、 INFO 、 DEBUG 。
log4j.rootLogger=[ALL],CONSOLE,FILE,ROLLING_FILE 
# 应用于控制台
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Threshold=INFO
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
#log4j.appender.CONSOLE.layout.ConversionPattern=[framework]%d-%c -%-4r [%t] %-5p %c %x - %m%n
log4j.appender.CONSOLE.layout.ConversionPattern=[^%-5p] %d:%rms- %l- %m .[Thread:%t &_]%n
#log4j.appender.CONSOLE.layout.ConversionPattern=[start]%d{DATE}[DATE]%n%p[PRIORITY]%n%x[NDC]%n%t[THREAD]n%c[CATEGORY]%n%m[MESSAGE]%n%n
 #每天产生一个日志文件
# 应用于文件
log4j.appender.FILE=org.apache.log4j.DailyRollingFileAppender
log4j.appender.FILE.Threshold=DEBUG
log4j.appender.FILE.File=logs/record_.log
log4j.appender.FILE.DatePattern=yyyyMMdd'.log'
#log4j.appender.FILE.Append=false 则本次输出会覆盖上次文件。默认为true采用追加的方式
log4j.appender.FILE.Append=true
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=[^%-5p:%c] %d:%rms- %l- %m .[Thread:%t &_]%n
#log4j.appender.FILE.layout.ConversionPattern=[framework]%d-%c -%-4r [%t] %-5p %c %x - %m%n
#Use this layout for LogFactor 5 analysis
 
# 应用于文件回滚
log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender
log4j.appender.ROLLING_FILE.Threshold=ERROR
#文件位置, 也可以用变量 ${java.home} 、 rolling.log
log4j.appender.ROLLING_FILE.File=logs/rolling.txt
#true:添加   false: 覆盖 
log4j.appender.ROLLING_FILE.Append=true
#文件最大尺寸
log4j.appender.ROLLING_FILE.MaxFileSize=1023KB
#备份数
log4j.appender.ROLLING_FILE.MaxBackupIndex=5
log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.ROLLING_FILE.layout.ConversionPattern=[^%-5p] %d:%rms- %l- %m .[Thread:%t &_]%n
#----------------------------SQL显示
log4j.logger.org.mybatis=DEBUG
